name: Build & Push CUDA 12 Container (ECR)

on:
  push:
    branches: ["main"]

permissions:
  contents: read

env:
  AWS_REGION: us-east-1
  ECR_ACCOUNT_ID: "056860164379"
  ECR_REPOSITORY: "boltz2"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Free up disk space
        run: |
          echo "Before cleanup:" && df -h
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost /opt/hostedtoolcache || true
          sudo apt-get clean
          echo "After cleanup:" && df -h

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx (docker-container driver)
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      # Authenticate the job to AWS using your short-lived credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      # Ensure the ECR repo exists (safe to run every time)
      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${{ env.ECR_REPOSITORY }}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${{ env.ECR_REPOSITORY }}" >/dev/null

      # Log Docker in to ECR and expose the registry URL as an output
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Generate image tags (latest, sha-<shortsha>) & OCI labels
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=raw,value=latest
            type=sha

      # Build and push to ECR
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          sbom: false
          provenance: false

      - name: Show disk usage after build
        run: df -h
